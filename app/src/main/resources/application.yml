server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://mysql:3306/jobscheduler?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: app
    password: app
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  sql:
    init:
      mode: always   # ensures schema.sql runs every startup
      schema-locations: classpath:schema.sql

  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: job-workers
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

redis:
  host: ${REDIS_HOST:localhost}
  port: ${REDIS_PORT:6379}

jobs:
  topic: jobs-dispatch
  scheduler:
    poll-ms: 3000
